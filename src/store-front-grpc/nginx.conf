http {
    upstream product_backend {
        # 80% do tráfego vai para o product-service
        server product-service:3002 weight=8;
        # 20% do tráfego vai para o fastapi-app (especificamente para /get-products)
        server fastapi-app:8000/get-products weight=2;
    }

    server {
        listen       8080;
        listen  [::]:8080;
        server_name  localhost;

        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location /health {
            default_type application/json;
            return 200 '{"status":"ok","version":"${APP_VERSION}"}';
        }

        location /order {
            proxy_pass http://order-service:3000/;
            proxy_http_version 1.1;
        }

        # Alteração para balanceamento de carga com URL específica para o fastapi-app
        location /products {
            # Definindo a lógica de balanceamento de carga
            set $target "http://product-service:3002";  # Default para product-service

            # 20% de chance de redirecionar para o fastapi-app (com /get-products)
            if ( $request_uri ~* "^/products" ) {
                set $target "http://fastapi-app:8000/get-products";  # Para o fastapi-app
            }

            proxy_pass $target;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
